float4x4 World;
float4x4 ViewProj;
float4 Color = float4(1,1,1,1);

struct VS_IN
{
	float3 position : POSITION;
	float3 normal : NORMAL;
	float2 uv : TEXCOORD;
	float4 color : COLOR;
};

struct PS_IN
{
	float4 position : POSITION;
	float3 normal : TEXCOORD0;
	float2 uv : TEXCOORD1;
	float4 color : TEXCOORD2;
};

PS_IN VS(VS_IN input)
{
	PS_IN output = (PS_IN)0;
	float4 wpos = mul(float4(input.position,1), World);
	output.position = mul(wpos, ViewProj);
	output.normal = normalize(mul(float4(input.normal,0), World));
	output.uv = input.uv;
	output.color = input.color;
	return output;
}

float4 PS(PS_IN input) : COLOR
{
	return Color;
}

technique SolidColor
{
	pass
	{
		VertexShader = compile vs_3_0 VS();
		PixelShader = compile ps_3_0 PS();
	}
}